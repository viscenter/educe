#include <StandAlone/Apps/Seg3D/FilterPlugin.h>

SET_PLUGIN_VERSION;

namespace SCIRun {

class ExampleFilterPlugin : public FilterPlugin {
	public:
		virtual std::string get_menu_string() const {
			return "ExampleFilterPlugin";
		}
		virtual void menu_event() const {
			printf("Hello from ExampleFilterPlugin\n");
		}
		BaseTool::propagation_state_e process_event(event_handle_t event) /*const*/ {
			printf("Attempting to handle event inside plugin\n");
			// check for the FinishEvent signal generated by the start button
			if (dynamic_cast<FinishEvent *>(event.get_rep())) {
				if (!painter_->check_for_active_data_volume("Example plugin filter"))
				{
					return STOP_E;
				}
			
				run_filter();
			}

			return CONTINUE_E;
		}
	private:
		virtual void run_filter() const {	
			printf("Example Filter Plugin run\n");
			painter_->update_progress(100);
			painter_->global_seg3dframe_pointer_->HideTool();	
		}
};

EXPORT_CREATE_FUNCTION(FilterPlugin, ExampleFilterPlugin)
EXPORT_DELETE_FUNCTION(FilterPlugin, ExampleFilterPlugin)

}
