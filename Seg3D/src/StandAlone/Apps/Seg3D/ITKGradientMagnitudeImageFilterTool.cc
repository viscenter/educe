
#include <StandAlone/Apps/Seg3D/ITKGradientMagnitudeImageFilterTool.h>
#include <StandAlone/Apps/Seg3D/Seg3DFrame.h>
#include <StandAlone/Apps/Seg3D/BrushTool.h>
#include <StandAlone/Apps/Seg3D/Painter.h>
#include <StandAlone/Apps/Seg3D/VolumeOps.h>
#include <Core/Util/Assert.h>

namespace SCIRun {

ITKGradientMagnitudeImageFilterTool::ITKGradientMagnitudeImageFilterTool(Painter *painter) :
  BaseTool("ITKGradientMagnitudeImageFilterTool::"),
  PointerTool("ITKGradientMagnitudeImageFilterTool::"),
  painter_(painter),
  filter_()
{
}

BaseTool::propagation_state_e 
ITKGradientMagnitudeImageFilterTool::process_event(event_handle_t event)
{ 
  // check for the FinishEvent signal generated by the start button
  if (dynamic_cast<FinishEvent *>(event.get_rep())) {
    if (!painter_->check_for_active_data_volume("Gradient magnitude filter"))
    {
      return STOP_E;
    }
	  
    run_filter();
  }
  return CONTINUE_E;
}


void ITKGradientMagnitudeImageFilterTool::run_filter()
{
  filter_.set_volume( painter_->copy_current_layer(" Gradient Magnitude") );
  painter_->set_status("Running gradient magnitude filter.");
  painter_->start_progress();
  filter_();
  painter_->finish_progress();
  painter_->current_volume_->reset_data_range();

  painter_->extract_all_window_slices();
  painter_->redraw_all();

  painter_->hide_tool_panel();
}


}
