/////////////////////////////////////////////////////////////////////////////
// Name:        itkcurvatureanistopricdiffusionfilter.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     14/08/2007 13:01:25
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 14/08/2007 13:01:25

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <StandAlone/Apps/Seg3D/Painter.h>
#include <StandAlone/Apps/Seg3D/Seg3DwxGuiUtils.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "itkcurvatureanistopricdiffusionfilter.h"
#include "seg3devents.h"

////@begin XPM images
////@end XPM images


/*!
 * ITKCurvatureAnistopricDiffusionFilter type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ITKCurvatureAnistopricDiffusionFilter, wxPanel )


/*!
 * ITKCurvatureAnistopricDiffusionFilter event table definition
 */

BEGIN_EVENT_TABLE( ITKCurvatureAnistopricDiffusionFilter, wxPanel )

////@begin ITKCurvatureAnistopricDiffusionFilter event table entries
////@end ITKCurvatureAnistopricDiffusionFilter event table entries
    EVT_BUTTON( XRCID("START_BUTTON"), ITKCurvatureAnistopricDiffusionFilter::OnStartButtonClick )
    EVT_BUTTON( XRCID("STOP_BUTTON"), ITKCurvatureAnistopricDiffusionFilter::OnStopButtonClick )
    EVT_BUTTON( XRCID("CLOSE_BUTTON"), ITKCurvatureAnistopricDiffusionFilter::OnCloseButtonClick )

    EVT_COMMAND( wxID_ANY, wxEVT_SET_PROGRESS, ITKCurvatureAnistopricDiffusionFilter::OnSetProgress)

END_EVENT_TABLE()


/*!
 * ITKCurvatureAnistopricDiffusionFilter constructors
 */

ITKCurvatureAnistopricDiffusionFilter::ITKCurvatureAnistopricDiffusionFilter()
{
    Init();
}

ITKCurvatureAnistopricDiffusionFilter::ITKCurvatureAnistopricDiffusionFilter( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * ITKCurvatureAnistopricDiffusionFilter creator
 */

bool ITKCurvatureAnistopricDiffusionFilter::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ITKCurvatureAnistopricDiffusionFilter creation
    SetParent(parent);
    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
////@end ITKCurvatureAnistopricDiffusionFilter creation
    return true;
}


/*!
 * ITKCurvatureAnistopricDiffusionFilter destructor
 */

ITKCurvatureAnistopricDiffusionFilter::~ITKCurvatureAnistopricDiffusionFilter()
{
////@begin ITKCurvatureAnistopricDiffusionFilter destruction
////@end ITKCurvatureAnistopricDiffusionFilter destruction
}


/*!
 * Member initialisation
 */

void ITKCurvatureAnistopricDiffusionFilter::Init()
{
////@begin ITKCurvatureAnistopricDiffusionFilter member initialisation
    mIterations = NULL;
    mTimeSteps = NULL;
    mConductance = NULL;
    mPercentage = NULL;
////@end ITKCurvatureAnistopricDiffusionFilter member initialisation

    disabler_ = NULL;
}


/*!
 * Control creation for ITKCurvatureAnistopricDiffusionFilter
 */

void ITKCurvatureAnistopricDiffusionFilter::CreateControls()
{    
////@begin ITKCurvatureAnistopricDiffusionFilter content construction
    if (!wxXmlResource::Get()->LoadPanel(this, GetParent(), _T("ID_ITKCURVATUREANISTOPRICDIFFUSIONFILTER")))
        wxLogError(wxT("Missing wxXmlResource::Get()->Load() in OnInit()?"));
    mIterations = XRCCTRL(*this, "SPIN_ITERATIONS", wxSpinCtrl);
    mTimeSteps = XRCCTRL(*this, "TEXT_TIMESTEPS", wxTextCtrl);
    mConductance = XRCCTRL(*this, "SPIN_CONDUCTANCE", wxSpinCtrl);
    mPercentage = XRCCTRL(*this, "ID_GAUGE", wxGauge);
    // Set validators
    if (FindWindow(XRCID("TEXT_TIMESTEPS")))
        FindWindow(XRCID("TEXT_TIMESTEPS"))->SetValidator( wxTextValidator(wxFILTER_NUMERIC) );
////@end ITKCurvatureAnistopricDiffusionFilter content construction

    mIterations->SetRange(1, 100);
    mTimeSteps->SetValue(wxT("0.0625"));
    mConductance->SetRange(1, 1024);
    // Create custom windows not generated automatically here.
////@begin ITKCurvatureAnistopricDiffusionFilter content initialisation
////@end ITKCurvatureAnistopricDiffusionFilter content initialisation
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for START_BUTTON
 */
void ITKCurvatureAnistopricDiffusionFilter::OnStartButtonClick( wxCommandEvent& event )
{
  SCIRun::ThrowSkinnerSignalEvent *tsse =
    new SCIRun::ThrowSkinnerSignalEvent("Painter::FinishTool");
  tsse->add_var("ITKCurvatureAnisotropicDiffusionImageFilterTool::numberOfIterations",
                SCIRun::to_string(mIterations->GetValue()));
  tsse->add_var("ITKCurvatureAnisotropicDiffusionImageFilterTool::timeStep",
                wx2std(mTimeSteps->GetValue()));
  tsse->add_var("ITKCurvatureAnisotropicDiffusionImageFilterTool::conductanceParameter",
                SCIRun::to_string(mConductance->GetValue()));
  SCIRun::Painter::ThrowSkinnerSignal(tsse, false);
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for STOP_BUTTON
 */
void ITKCurvatureAnistopricDiffusionFilter::OnStopButtonClick( wxCommandEvent& event )
{
  
  SCIRun::Painter::ThrowSkinnerSignal("Painter::AbortFilterOn");
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLOSE_BUTTON
 */
void ITKCurvatureAnistopricDiffusionFilter::OnCloseButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

/*!
 * Should we show tooltips?
 */

bool ITKCurvatureAnistopricDiffusionFilter::ShowToolTips()
{
    return true;
}

void
ITKCurvatureAnistopricDiffusionFilter::OnSetProgress( wxCommandEvent &event)
{	
  int progress = event.GetInt();
  
  if (progress < 0)
  {
    wxBeginBusyCursor();
    disabler_ = new wxWindowDisabler();
    progress = 0;
  }
  if (progress > 100)
  {
    if (disabler_) { delete disabler_; disabler_ = 0; }
    wxEndBusyCursor();
    progress = 100;
  }
  if (progress == 0 || progress > mPercentage->GetValue())
  {
    mPercentage->SetValue(progress);
  }
}


/*!
 * Get bitmap resources
 */

wxBitmap ITKCurvatureAnistopricDiffusionFilter::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ITKCurvatureAnistopricDiffusionFilter bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ITKCurvatureAnistopricDiffusionFilter bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ITKCurvatureAnistopricDiffusionFilter::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ITKCurvatureAnistopricDiffusionFilter icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ITKCurvatureAnistopricDiffusionFilter icon retrieval
}
