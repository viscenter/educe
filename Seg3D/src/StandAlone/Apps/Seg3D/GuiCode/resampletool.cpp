/////////////////////////////////////////////////////////////////////////////
// Name:        resampletool.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     28/08/2007 06:41:39
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 28/08/2007 06:41:39

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <StandAlone/Apps/Seg3D/Painter.h>
#include <StandAlone/Apps/Seg3D/Seg3DwxGuiUtils.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "resampletool.h"

////@begin XPM images
////@end XPM images


/*!
 * ResampleTool type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ResampleTool, wxPanel )


/*!
 * ResampleTool event table definition
 */

BEGIN_EVENT_TABLE( ResampleTool, wxPanel )

////@begin ResampleTool event table entries
////@end ResampleTool event table entries
EVT_BUTTON( XRCID("START_BUTTON"), ResampleTool::OnStartButtonClick )
EVT_BUTTON( XRCID("CLOSE_BUTTON"), ResampleTool::OnCloseButtonClick )

END_EVENT_TABLE()


/*!
 * ResampleTool constructors
 */

ResampleTool::ResampleTool()
{
    Init();
}

ResampleTool::ResampleTool( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * ResampleTool creator
 */

bool ResampleTool::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ResampleTool creation
    SetParent(parent);
    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end ResampleTool creation
    return true;
}


/*!
 * ResampleTool destructor
 */

ResampleTool::~ResampleTool()
{
////@begin ResampleTool destruction
////@end ResampleTool destruction
}


/*!
 * Member initialisation
 */

void ResampleTool::Init()
{
////@begin ResampleTool member initialisation
    mX = NULL;
    mY = NULL;
    mZ = NULL;
    mFilter = NULL;
////@end ResampleTool member initialisation
}


/*!
 * Control creation for ResampleTool
 */

void ResampleTool::CreateControls()
{    
////@begin ResampleTool content construction
    if (!wxXmlResource::Get()->LoadPanel(this, GetParent(), _T("ID_RESAMPLETOOL")))
        wxLogError(wxT("Missing wxXmlResource::Get()->Load() in OnInit()?"));
    mX = XRCCTRL(*this, "ID_TEXTCTRL5", wxSpinCtrl);
    mY = XRCCTRL(*this, "ID_TEXTCTRL6", wxSpinCtrl);
    mZ = XRCCTRL(*this, "ID_TEXTCTRL7", wxSpinCtrl);
    mFilter = XRCCTRL(*this, "ID_CHOICE1", wxChoice);
////@end ResampleTool content construction

    // Create custom windows not generated automatically here.

    // Set the default value and range for the spinners.
    mX->SetRange(1, 0x7fffffff);
    mY->SetRange(1, 0x7fffffff);
    mZ->SetRange(1, 0x7fffffff);
    mX->SetValue(128);
    mY->SetValue(128);
    mZ->SetValue(128);

////@begin ResampleTool content initialisation
////@end ResampleTool content initialisation
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for START_BUTTON
 */
void ResampleTool::OnStartButtonClick( wxCommandEvent& event )
{
  wxBeginBusyCursor();
  SCIRun::ThrowSkinnerSignalEvent *tsse =
    new SCIRun::ThrowSkinnerSignalEvent("Painter::FinishTool");
  tsse->add_var( "Resample::x", SCIRun::to_string( mX->GetValue() ) );
  tsse->add_var( "Resample::y", SCIRun::to_string( mY->GetValue() ) );
  tsse->add_var( "Resample::z", SCIRun::to_string( mZ->GetValue() ) );
  tsse->add_var( "Resample::filter", wx2std( mFilter->GetStringSelection() ) );
  SCIRun::Painter::ThrowSkinnerSignal(tsse);
  wxEndBusyCursor();

  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLOSE_BUTTON
 */
void ResampleTool::OnCloseButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

/*!
 * Should we show tooltips?
 */

bool ResampleTool::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ResampleTool::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ResampleTool bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ResampleTool bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ResampleTool::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ResampleTool icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ResampleTool icon retrieval
}
