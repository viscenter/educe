
#include <StandAlone/Apps/Seg3D/ITKThresholdImageFilterTool.h>

#include <StandAlone/Apps/Seg3D/Seg3DFrame.h>
#include <StandAlone/Apps/Seg3D/BrushTool.h>
#include <StandAlone/Apps/Seg3D/Painter.h>
#include <StandAlone/Apps/Seg3D/VolumeOps.h>
#include <Core/Util/Assert.h>

#include <StandAlone/Apps/Seg3D/GuiCode/itkthresholdfilter.h>
#include <StandAlone/Apps/Seg3D/Seg3DwxGuiUtils.h>
#include <wx/string.h>
#include <wx/variant.h>

namespace SCIRun {

ITKThresholdImageFilterTool::
ITKThresholdImageFilterTool(Painter *painter) :
  BaseTool("ITK Threshold ImageFilter Tool"),
  painter_(painter),
  LowerThreshold_(painter->get_vars(), "ITKThresholdFilter::mMinValue"),
  UpperThreshold_(painter->get_vars(), "ITKThresholdFilter::mMaxValue")
{
}


BaseTool::propagation_state_e 
ITKThresholdImageFilterTool::process_event(event_handle_t event)
{
  // Check for the FinishEvent signal generated by the start button
  if (dynamic_cast<FinishEvent *>(event.get_rep())) {
    if (!painter_->check_for_active_data_volume("Threshold filter"))
    {
      return STOP_E;
    }
    run_filter();
  }
 
  return CONTINUE_E;
}


void
ITKThresholdImageFilterTool::run_filter()
{
  painter_->volume_lock_.lock();

  // Save off the source.
  NrrdVolumeHandle source_volume = painter_->current_volume_;

  // Make a new label volume
  const string name = painter_->current_volume_->name_ + " Threshold";
  painter_->create_new_label(painter_->current_volume_, name);

  painter_->rebuild_layer_buttons();
  painter_->volume_lock_.unlock();

  // Set the filter parameters.
  const double lower = LowerThreshold_;
  const double upper = UpperThreshold_;

  VolumeOps::threshold(painter_->current_volume_->nrrd_handle_,
                       painter_->current_volume_->label_,
                       source_volume->nrrd_handle_, lower, upper);

  // Redraw everything after completion.
  painter_->extract_all_window_slices();
  painter_->redraw_all();

  painter_->hide_tool_panel();
}


}
