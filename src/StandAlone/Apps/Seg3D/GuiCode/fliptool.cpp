/////////////////////////////////////////////////////////////////////////////
// Name:        fliptool.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     27/08/2007 09:39:40
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 27/08/2007 09:39:40

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <StandAlone/Apps/Seg3D/Painter.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "fliptool.h"

////@begin XPM images
////@end XPM images


/*!
 * FlipTool type definition
 */

IMPLEMENT_DYNAMIC_CLASS( FlipTool, wxPanel )


/*!
 * FlipTool event table definition
 */

BEGIN_EVENT_TABLE( FlipTool, wxPanel )

////@begin FlipTool event table entries
////@end FlipTool event table entries
EVT_BUTTON( XRCID("FLIP_CORONAL_BUTTON"), FlipTool::OnFlipCoronalButtonClick )
EVT_BUTTON( XRCID("FLIP_AXIAL_BUTTON"), FlipTool::OnFlipAxialButtonClick )
EVT_BUTTON( XRCID("FLIP_SAGITTAL_BUTTON"), FlipTool::OnFlipSagitalButtonClick )
EVT_BUTTON( XRCID("CLOSE_BUTTON"), FlipTool::OnCloseButtonClick )

END_EVENT_TABLE()


/*!
 * FlipTool constructors
 */

FlipTool::FlipTool()
{
    Init();
}

FlipTool::FlipTool( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * FlipTool creator
 */

bool FlipTool::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin FlipTool creation
    SetParent(parent);
    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end FlipTool creation
    return true;
}


/*!
 * FlipTool destructor
 */

FlipTool::~FlipTool()
{
////@begin FlipTool destruction
////@end FlipTool destruction
}


/*!
 * Member initialisation
 */

void FlipTool::Init()
{
////@begin FlipTool member initialisation
////@end FlipTool member initialisation
}


/*!
 * Control creation for FlipTool
 */

void FlipTool::CreateControls()
{    
////@begin FlipTool content construction
    if (!wxXmlResource::Get()->LoadPanel(this, GetParent(), _T("ID_FLIPTOOL")))
        wxLogError(wxT("Missing wxXmlResource::Get()->Load() in OnInit()?"));
////@end FlipTool content construction

    // Create custom windows not generated automatically here.
////@begin FlipTool content initialisation
////@end FlipTool content initialisation
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for FLIP_CORONAL_BUTTON
 */
void FlipTool::OnFlipCoronalButtonClick( wxCommandEvent& event )
{
  wxBeginBusyCursor();
  SCIRun::ThrowSkinnerSignalEvent *tsse = new SCIRun::ThrowSkinnerSignalEvent("Painter::FlipVolume");
  tsse->add_var("Painter::flip::axis", "2");
  SCIRun::Painter::ThrowSkinnerSignal(tsse);
  wxEndBusyCursor();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for FLIP_AXIAL_BUTTON
 */
void FlipTool::OnFlipAxialButtonClick( wxCommandEvent& event )
{
  wxBeginBusyCursor();
  SCIRun::ThrowSkinnerSignalEvent *tsse = new SCIRun::ThrowSkinnerSignalEvent("Painter::FlipVolume");
  tsse->add_var("Painter::flip::axis", "3");
  SCIRun::Painter::ThrowSkinnerSignal(tsse);
  wxEndBusyCursor();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for FLIP_SAGITTAL_BUTTON
 */
void FlipTool::OnFlipSagitalButtonClick( wxCommandEvent& event )
{
  wxBeginBusyCursor();
  SCIRun::ThrowSkinnerSignalEvent *tsse = new SCIRun::ThrowSkinnerSignalEvent("Painter::FlipVolume");
  tsse->add_var("Painter::flip::axis", "1");
  SCIRun::Painter::ThrowSkinnerSignal(tsse);
  wxEndBusyCursor();
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLOSE_BUTTON
 */
void FlipTool::OnCloseButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

/*!
 * Should we show tooltips?
 */

bool FlipTool::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap FlipTool::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin FlipTool bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end FlipTool bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon FlipTool::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin FlipTool icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end FlipTool icon retrieval
}
