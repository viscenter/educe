/////////////////////////////////////////////////////////////////////////////
// Name:        itkneighbourhoodconnectedfilter.cpp
// Purpose:     
// Author:      
// Modified by: 
// Created:     14/08/2007 13:05:42
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 14/08/2007 13:05:42

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"
#include <StandAlone/Apps/Seg3D/Painter.h>

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "itkneighbourhoodconnectedfilter.h"
#include "seg3devents.h"

////@begin XPM images
////@end XPM images


/*!
 * ITKNeighbourhoodConnectedFilter type definition
 */

IMPLEMENT_DYNAMIC_CLASS( ITKNeighbourhoodConnectedFilter, wxPanel )


/*!
 * ITKNeighbourhoodConnectedFilter event table definition
 */

BEGIN_EVENT_TABLE( ITKNeighbourhoodConnectedFilter, wxPanel )

////@begin ITKNeighbourhoodConnectedFilter event table entries
////@end ITKNeighbourhoodConnectedFilter event table entries
    EVT_BUTTON( XRCID("CLEAR_SEEDS_BUTTON"), ITKNeighbourhoodConnectedFilter::OnClearSeedsButtonClick )
    EVT_BUTTON( XRCID("START_BUTTON"), ITKNeighbourhoodConnectedFilter::OnStartButtonClick )
    EVT_BUTTON( XRCID("CLOSE_BUTTON"), ITKNeighbourhoodConnectedFilter::OnCloseButtonClick )

    // Custom entries


    EVT_COMMAND( wxID_ANY, wxEVT_SET_PROGRESS, ITKNeighbourhoodConnectedFilter::OnSetProgress)
END_EVENT_TABLE()


/*!
 * ITKNeighbourhoodConnectedFilter constructors
 */

ITKNeighbourhoodConnectedFilter::ITKNeighbourhoodConnectedFilter()
{
    Init();
}

ITKNeighbourhoodConnectedFilter::ITKNeighbourhoodConnectedFilter( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
    Init();
    Create(parent, id, pos, size, style);
}


/*!
 * ITKNeighbourhoodConnectedFilter creator
 */

bool ITKNeighbourhoodConnectedFilter::Create( wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style )
{
////@begin ITKNeighbourhoodConnectedFilter creation
    SetParent(parent);
    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
////@end ITKNeighbourhoodConnectedFilter creation
    return true;
}


/*!
 * ITKNeighbourhoodConnectedFilter destructor
 */

ITKNeighbourhoodConnectedFilter::~ITKNeighbourhoodConnectedFilter()
{
////@begin ITKNeighbourhoodConnectedFilter destruction
////@end ITKNeighbourhoodConnectedFilter destruction
}


/*!
 * Member initialisation
 */

void ITKNeighbourhoodConnectedFilter::Init()
{
////@begin ITKNeighbourhoodConnectedFilter member initialisation
    mPercentage = NULL;
////@end ITKNeighbourhoodConnectedFilter member initialisation

    disabler_ = NULL;
}


/*!
 * Control creation for ITKNeighbourhoodConnectedFilter
 */

void ITKNeighbourhoodConnectedFilter::CreateControls()
{    
////@begin ITKNeighbourhoodConnectedFilter content construction
    if (!wxXmlResource::Get()->LoadPanel(this, GetParent(), _T("ID_ITKNEIGHBOURHOODCONNECTEDFILTER")))
        wxLogError(wxT("Missing wxXmlResource::Get()->Load() in OnInit()?"));
    mPercentage = XRCCTRL(*this, "ID_GAUGE1", wxGauge);
////@end ITKNeighbourhoodConnectedFilter content construction


    // Create custom windows not generated automatically here.
////@begin ITKNeighbourhoodConnectedFilter content initialisation
////@end ITKNeighbourhoodConnectedFilter content initialisation
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLEAR_SEEDS_BUTTON
 */
void ITKNeighbourhoodConnectedFilter::OnClearSeedsButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::ThrowSkinnerSignal("Painter::SetLayer");
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for START_BUTTON
 */
void ITKNeighbourhoodConnectedFilter::OnStartButtonClick( wxCommandEvent& event )
{
  SCIRun::ThrowSkinnerSignalEvent *tsse =
    new SCIRun::ThrowSkinnerSignalEvent("Painter::FinishTool");
  SCIRun::Painter::ThrowSkinnerSignal(tsse, false);
}

/*!
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for CLOSE_BUTTON
 */
void ITKNeighbourhoodConnectedFilter::OnCloseButtonClick( wxCommandEvent& event )
{
  SCIRun::Painter::global_seg3dframe_pointer_->HideTool();
}

void ITKNeighbourhoodConnectedFilter::OnSetProgress( wxCommandEvent &event)
{	
  int progress = event.GetInt();
  
  // start_progress() sends -1
  if (progress < 0)
  {
    wxBeginBusyCursor();
    disabler_ = new wxWindowDisabler();
    progress = 0;
  }
  // finish_progress() sends 101
  if (progress > 100)
  {
    if (disabler_) { delete disabler_; disabler_ = 0; }
    wxEndBusyCursor();
    progress = 100;
  }
  if (progress == 0 || progress > mPercentage->GetValue())
  {
    mPercentage->SetValue(progress);
  }
}





/*!
 * Should we show tooltips?
 */

bool ITKNeighbourhoodConnectedFilter::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap ITKNeighbourhoodConnectedFilter::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin ITKNeighbourhoodConnectedFilter bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end ITKNeighbourhoodConnectedFilter bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon ITKNeighbourhoodConnectedFilter::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin ITKNeighbourhoodConnectedFilter icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end ITKNeighbourhoodConnectedFilter icon retrieval
}
